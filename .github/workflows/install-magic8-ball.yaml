name: Respond to PR Comment
on:
  issue_comment:
    types: [created, edited]

jobs:
  comment-response:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/magic8ball')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Respond to Comment
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = context.issue.number; // The number of the issue (PR) the comment was made on
            const issueComment = context.payload.comment.body; // The content of the comment

            const decisionTypes = {

              reverting: {
                icon: "↩️",
                messages: ["Time to rewind a bit! Reverting the last few changes."],
                action: async (prNumber) => {
                  const numCommitsToRevert = 2; // Number of recent commits to revert
                  const { data: prCommits } = await github.rest.pulls.listCommits({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: prNumber,
                    per_page: numCommitsToRevert,
                  });

                  for (const { sha } of prCommits) {
                    await github.rest.git.createRef({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      ref: `refs/heads/revert-${sha.substring(0, 7)}`,
                      sha,
                    });

                    await github.rest.repos.createCommitComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      commit_sha: sha,
                      body: "This commit has been selected for reversion.",
                    });

                    // Create a revert commit for each selected commit
                    await github.rest.git
                      .createCommit({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        message: `Revert "${sha.substring(0, 7)}"`,
                        tree: sha, // This simplification might need adjustments based on your tree and parents
                        parents: [sha], // Simplified, you need the parent of the commit being reverted
                      })
                      .then((response) => {
                        // Optionally, create a new branch or a pull request with the revert commit
                        console.log(`Revert commit created: ${response.data.sha}`);
                      });
                  }
                },
              },
            };

            const postCommentAndAct = async (prNumber, type) => {
              const decision = decisionTypes[type];
              const message = decision.messages[Math.floor(Math.random() * decision.messages.length)] + " " + decision.icon;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: message,
              });
              await decision.action(prNumber);
            };


            const type = Object.keys(decisionTypes)[
              Math.floor(
                  Math.random() * 
                  Object.keys(decisionTypes).length
              )
            ];
            await postCommentAndAct(issueNumber, type);
